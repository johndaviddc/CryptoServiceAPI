package dave.dev.cryptoservice.controller

import dave.dev.cryptoservice.model.CryptoCurrency;
import dave.dev.cryptoservice.service.CryptoCurrencyService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/api/cryptocurrencies")
public class CryptoCurrencyController {

    @Autowired
    private CryptoCurrencyService cryptoCurrencyService;

    @GetMapping
    public ResponseEntity<List<CryptoCurrency>> getAllCryptoCurrencies() {
        List<CryptoCurrency> cryptocurrencies = cryptoCurrencyService.getAllCryptoCurrencies();
        return new ResponseEntity<>(cryptocurrencies, HttpStatus.OK);
    }

    @GetMapping("/{id}")
    public ResponseEntity<CryptoCurrency> getCryptoCurrencyById(@PathVariable Long id) {
        CryptoCurrency cryptoCurrency = cryptoCurrencyService.getCryptoCurrencyById(id);
        return new ResponseEntity<>(cryptoCurrency, HttpStatus.OK);
    }

    @PostMapping
    public ResponseEntity<CryptoCurrency> createCryptoCurrency(@RequestBody CryptoCurrency cryptoCurrency) {
        CryptoCurrency createdCryptoCurrency = cryptoCurrencyService.saveCryptoCurrency(cryptoCurrency);
        return new ResponseEntity<>(createdCryptoCurrency, HttpStatus.CREATED);
    }

    @PutMapping("/{id}")
    public ResponseEntity<Void> updateCryptoCurrency(@PathVariable Long id, @RequestBody CryptoCurrency updatedCryptoCurrency) {
        cryptoCurrencyService.updateCryptoCurrency(id, updatedCryptoCurrency);
        return new ResponseEntity<>(HttpStatus.NO_CONTENT);
    }

    @DeleteMapping("/{id}")
    public ResponseEntity<Void> deleteCryptoCurrency(@PathVariable Lond id) {
        cryptoCurrencyService.deleteCryptoCurrency(id);
        return new ResponseEntity<>(HttpStatus.NO_CONTENT);
    }
}
